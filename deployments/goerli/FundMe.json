{
    "address": "0xe2eeAA761f8243B408436c541D9F1833C0465231",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "FunderToAmount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "funders",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "minUSD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "priceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x8c5fb6670229fbe86f41a782db02b5c77602cf4e264280df12f028e08763b597",
    "receipt": {
        "to": null,
        "from": "0xe8c56dfE91F29D4102B5a882D8d67c57A667970E",
        "contractAddress": "0xe2eeAA761f8243B408436c541D9F1833C0465231",
        "transactionIndex": 77,
        "gasUsed": "833532",
        "logsBloom": "0x
        "blockHash": "0xfaf66b10afe2e71a983859c1e61e4bfe7cd751aea479263a195a2f40a920e9bf",
        "transactionHash": "0x8c5fb6670229fbe86f41a782db02b5c77602cf4e264280df12f028e08763b597",
        "logs": [],
        "blockNumber": 7813983,
        "cumulativeGasUsed": "9442605",
        "status": 1,
        "byzantium": true
    },
    "args": ["0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"],
    "numDeployments": 1,
    "solcInputHash": "b800e97d43f5f56fc95ce29f54b7c91a",
    "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"FunderToAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./Priceconverter.sol\\\";\\n\\nerror notOwner();\\n\\ncontract FundMe {\\n    using Priceconverter for uint256;\\n    uint256 public minUSD = 50 * 1e18;\\n    address immutable owner;\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    address[] public funders;\\n    mapping(address => uint256) public FunderToAmount;\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= minUSD,\\n            \\\"Didn't send enough\\\"\\n        );\\n        FunderToAmount[msg.sender] = msg.value;\\n        funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public OnlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            FunderToAmount[funders[funderIndex]] = 0;\\n        }\\n        funders = new address[](0);\\n        (bool Callsuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(Callsuccess, \\\"Call Transaction Failure\\\");\\n    }\\n\\n    modifier OnlyOwner() {\\n        require(msg.sender == owner, \\\"Sender is not owner\\\");\\n        _;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x166c696ee35d4032bb9ef3494f0fd4d35df120fd339e73fc315d2065f4ccf781\",\"license\":\"MIT\"},\"contracts/Priceconverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary Priceconverter {\\n    function getPrice(AggregatorV3Interface pricefeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // AggregatorV3Interface pricefeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        (, int256 price, , , ) = pricefeed.latestRoundData();\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(AggregatorV3Interface pricefeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        // AggregatorV3Interface pricefeed = AggregatorV3Interface(\\n        //     0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        return pricefeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethamount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethprice = getPrice(priceFeed);\\n        uint256 ethAmountInUSD = (ethprice * ethamount) / 1e18;\\n        return ethAmountInUSD;\\n    }\\n}\\n\",\"keccak256\":\"0xf192466f6fe14d2aaa230c5ffa9a40cc754b00f6d42243d70575364d2d093e19\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040526802b5e3af16b188000060005534801561001d57600080fd5b50604051610eae380380610eae833981810160405281019061003f919061011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b6100fa816100df565b811461010557600080fd5b50565b600081519050610117816100f1565b92915050565b600060208284031215610133576101326100ba565b5b600061014184828501610108565b91505092915050565b608051610d49610165600039600061029f0152610d496000f3fe6080604052600436106100595760003560e01c80630715ee1c146100725780633ccfd60b146100af578063741bef1a146100c6578063b60d4288146100f1578063dc0d3dff146100fb578063dc992aa01461013857610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061009960048036038101906100949190610723565b610285565b6040516100a69190610769565b60405180910390f35b3480156100bb57600080fd5b506100c461029d565b005b3480156100d257600080fd5b506100db6104e1565b6040516100e891906107e3565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610122600480360381019061011d919061082a565b610507565b60405161012f9190610866565b60405180910390f35b34801561014457600080fd5b5061014d610546565b60405161015a9190610769565b60405180910390f35b60005461019b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054c90919063ffffffff16565b10156101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d3906108de565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103229061094a565b60405180910390fd5b60005b6002805490508110156103d157600060036000600284815481106103555761035461096a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c9906109c8565b91505061032e565b50600067ffffffffffffffff8111156103ed576103ec610a10565b5b60405190808252806020026020018201604052801561041b5781602001602082028036833780820191505090505b5060029080519060200190610431929190610619565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045890610a70565b60006040518083038185875af1925050503d8060008114610495576040519150601f19603f3d011682016040523d82523d6000602084013e61049a565b606091505b50509050806104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610ad1565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061051757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60008061055883610588565b90506000670de0b6b3a764000085836105719190610af1565b61057b9190610b62565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610c20565b5050509150506402540be400816106119190610c9b565b915050919050565b828054828255906000526020600020908101928215610692579160200282015b828111156106915782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610639565b5b50905061069f91906106a3565b5090565b5b808211156106bc5760008160009055506001016106a4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106f0826106c5565b9050919050565b610700816106e5565b811461070b57600080fd5b50565b60008135905061071d816106f7565b92915050565b600060208284031215610739576107386106c0565b5b60006107478482850161070e565b91505092915050565b6000819050919050565b61076381610750565b82525050565b600060208201905061077e600083018461075a565b92915050565b6000819050919050565b60006107a96107a461079f846106c5565b610784565b6106c5565b9050919050565b60006107bb8261078e565b9050919050565b60006107cd826107b0565b9050919050565b6107dd816107c2565b82525050565b60006020820190506107f860008301846107d4565b92915050565b61080781610750565b811461081257600080fd5b50565b600081359050610824816107fe565b92915050565b6000602082840312156108405761083f6106c0565b5b600061084e84828501610815565b91505092915050565b610860816106e5565b82525050565b600060208201905061087b6000830184610857565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108c8601283610881565b91506108d382610892565b602082019050919050565b600060208201905081810360008301526108f7816108bb565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610934601383610881565b915061093f826108fe565b602082019050919050565b6000602082019050818103600083015261096381610927565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d382610750565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0557610a04610999565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c205472616e73616374696f6e204661696c7572650000000000000000600082015250565b6000610abb601883610881565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc82610750565b9150610b0783610750565b9250828202610b1581610750565b91508282048414831517610b2c57610b2b610999565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6d82610750565b9150610b7883610750565b925082610b8857610b87610b33565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb281610b93565b8114610bbd57600080fd5b50565b600081519050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081519050610c0581610bdf565b92915050565b600081519050610c1a816107fe565b92915050565b600080600080600060a08688031215610c3c57610c3b6106c0565b5b6000610c4a88828901610bc0565b9550506020610c5b88828901610bf6565b9450506040610c6c88828901610c0b565b9350506060610c7d88828901610c0b565b9250506080610c8e88828901610bc0565b9150509295509295909350565b6000610ca682610bd5565b9150610cb183610bd5565b9250828202610cbf81610bd5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf757610cf6610999565b5b8282058414831517610d0c57610d0b610999565b5b509291505056fea2646970667358221220441f2b0905342327867ba107dd2c00c272aa6a49ab0eed8183b1a7713e9a05e064736f6c63430008110033",
    "deployedBytecode": "0x6080604052600436106100595760003560e01c80630715ee1c146100725780633ccfd60b146100af578063741bef1a146100c6578063b60d4288146100f1578063dc0d3dff146100fb578063dc992aa01461013857610068565b3661006857610066610163565b005b610070610163565b005b34801561007e57600080fd5b5061009960048036038101906100949190610723565b610285565b6040516100a69190610769565b60405180910390f35b3480156100bb57600080fd5b506100c461029d565b005b3480156100d257600080fd5b506100db6104e1565b6040516100e891906107e3565b60405180910390f35b6100f9610163565b005b34801561010757600080fd5b50610122600480360381019061011d919061082a565b610507565b60405161012f9190610866565b60405180910390f35b34801561014457600080fd5b5061014d610546565b60405161015a9190610769565b60405180910390f35b60005461019b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461054c90919063ffffffff16565b10156101dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d3906108de565b60405180910390fd5b34600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60036020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461032b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103229061094a565b60405180910390fd5b60005b6002805490508110156103d157600060036000600284815481106103555761035461096a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103c9906109c8565b91505061032e565b50600067ffffffffffffffff8111156103ed576103ec610a10565b5b60405190808252806020026020018201604052801561041b5781602001602082028036833780820191505090505b5060029080519060200190610431929190610619565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161045890610a70565b60006040518083038185875af1925050503d8060008114610495576040519150601f19603f3d011682016040523d82523d6000602084013e61049a565b606091505b50509050806104de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d590610ad1565b60405180910390fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6002818154811061051757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60005481565b60008061055883610588565b90506000670de0b6b3a764000085836105719190610af1565b61057b9190610b62565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156105d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fa9190610c20565b5050509150506402540be400816106119190610c9b565b915050919050565b828054828255906000526020600020908101928215610692579160200282015b828111156106915782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610639565b5b50905061069f91906106a3565b5090565b5b808211156106bc5760008160009055506001016106a4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106f0826106c5565b9050919050565b610700816106e5565b811461070b57600080fd5b50565b60008135905061071d816106f7565b92915050565b600060208284031215610739576107386106c0565b5b60006107478482850161070e565b91505092915050565b6000819050919050565b61076381610750565b82525050565b600060208201905061077e600083018461075a565b92915050565b6000819050919050565b60006107a96107a461079f846106c5565b610784565b6106c5565b9050919050565b60006107bb8261078e565b9050919050565b60006107cd826107b0565b9050919050565b6107dd816107c2565b82525050565b60006020820190506107f860008301846107d4565b92915050565b61080781610750565b811461081257600080fd5b50565b600081359050610824816107fe565b92915050565b6000602082840312156108405761083f6106c0565b5b600061084e84828501610815565b91505092915050565b610860816106e5565b82525050565b600060208201905061087b6000830184610857565b92915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f7567680000000000000000000000000000600082015250565b60006108c8601283610881565b91506108d382610892565b602082019050919050565b600060208201905081810360008301526108f7816108bb565b9050919050565b7f53656e646572206973206e6f74206f776e657200000000000000000000000000600082015250565b6000610934601383610881565b915061093f826108fe565b602082019050919050565b6000602082019050818103600083015261096381610927565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109d382610750565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a0557610a04610999565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610a5a600083610a3f565b9150610a6582610a4a565b600082019050919050565b6000610a7b82610a4d565b9150819050919050565b7f43616c6c205472616e73616374696f6e204661696c7572650000000000000000600082015250565b6000610abb601883610881565b9150610ac682610a85565b602082019050919050565b60006020820190508181036000830152610aea81610aae565b9050919050565b6000610afc82610750565b9150610b0783610750565b9250828202610b1581610750565b91508282048414831517610b2c57610b2b610999565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b6d82610750565b9150610b7883610750565b925082610b8857610b87610b33565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610bb281610b93565b8114610bbd57600080fd5b50565b600081519050610bcf81610ba9565b92915050565b6000819050919050565b610be881610bd5565b8114610bf357600080fd5b50565b600081519050610c0581610bdf565b92915050565b600081519050610c1a816107fe565b92915050565b600080600080600060a08688031215610c3c57610c3b6106c0565b5b6000610c4a88828901610bc0565b9550506020610c5b88828901610bf6565b9450506040610c6c88828901610c0b565b9350506060610c7d88828901610c0b565b9250506080610c8e88828901610bc0565b9150509295509295909350565b6000610ca682610bd5565b9150610cb183610bd5565b9250828202610cbf81610bd5565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610cf757610cf6610999565b5b8282058414831517610d0c57610d0b610999565b5b509291505056fea2646970667358221220441f2b0905342327867ba107dd2c00c272aa6a49ab0eed8183b1a7713e9a05e064736f6c63430008110033",
    "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "minUSD",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
            },
            {
                "astId": 64,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "priceFeed",
                "offset": 0,
                "slot": "1",
                "type": "t_contract(AggregatorV3Interface)45"
            },
            {
                "astId": 84,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "funders",
                "offset": 0,
                "slot": "2",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 88,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "FunderToAmount",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_uint256)"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
